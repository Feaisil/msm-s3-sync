#! /bin/sh
### BEGIN INIT INFO
# Provides:          msm-s3-sync
# Required-Start:    $remote_fs $syslog $network $time
# Required-Stop:     $remote_fs $syslog $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Start-Before:    msm
# X-Stop-After:      msm
# Short-Description: Sync MSM files to S3.
# Description:       On startup, restore MSM working files from S3
#                    before running msm start script. On shutdown,
#					 sync MSM archive and working files to S3 after
# 					 running msm stop script.
### END INIT INFO

# Author: paris MEULEMAN <me@meuleman.paris>
#

# Do NOT "set -e"

# Include environment variables from /etc/environment to
# set AWS variables and MSM_S3_BUCKET.
#
# Do this first, so PATH from /etc/environment is
# overwritten below
if [ -f /etc/environment ]; then
    while read LINE
    do
        export $LINE
    done < /etc/environment
fi

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC="Sync MSM files to S3"
NAME=msm-s3-sync
SCRIPTNAME=/etc/init.d/$NAME


# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	rm -rf /opt/msm/jars
	rm -rf /opt/msm/versioning
	rm -rf /opt/msm/servers

	AWS_DEFAULT_REGION=$(aws --output text s3api get-bucket-location --bucket $MSM_S3_BUCKET)
	aws --region $AWS_DEFAULT_REGION s3 cp s3://$MSM_S3_BUCKET/backup.tgz /tmp

	cd /
	tar xzf /tmp/backup.tgz
	cd -

	chown -R minecraft:minecraft /opt/msm

	SERVER='isil'
	JARGROUP='minecraft'
	MSM='/usr/local/bin/msm'
	if [ -x $MSM ]; then
		$MSM $SERVER jar $JARGROUP
	else
		return 2
	fi
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Roll log file
    MSM='/usr/local/bin/msm'
    if [ -x $MSM ]; then
        $MSM all logroll
        find /opt/msm/servers -name 'server.log.offset' -exec rm '{}' ';'
	/usr/local/bin/msm-s3-backup
	/usr/local/bin/msm-update-dns.py
    else
        return 2
    fi
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop}" >&2
	exit 3
	;;
esac

:
